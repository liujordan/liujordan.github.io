{"version":3,"sources":["components/LoginButton.tsx","components/LogoutButton.tsx","components/AuthenticationButton.tsx","components/Profile.tsx","components/Loading.tsx","components/routing/PrivateRoute.tsx","App.tsx","reportWebVitals.js","components/contexts/Auth0ProviderWithHistory.tsx","index.tsx"],"names":["LoginButton","loginWithRedirect","useAuth0","onClick","LogoutButton","logout","returnTo","window","location","origin","AuthenticationButton","isAuthenticated","Profile","user","isLoading","name","picture","email","className","src","alt","JSON","stringify","Loading","PrivateRoute","component","rest","withAuthenticationRequired","onRedirecting","Login","App","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Auth0ProviderWithHistory","domain","clientId","children","history","useHistory","redirectUri","onRedirectCallback","appState","push","pathname","cacheLocation","ReactDOM","render","StrictMode","authconfig","document","getElementById"],"mappings":"0UAQeA,EANK,WAClB,IAAQC,EAAsBC,cAAtBD,kBAER,OAAO,wBAAQE,QAAS,kBAAMF,KAAvB,qB,cCOMG,EAVM,WACnB,IAAOC,EAAUH,cAAVG,OAEP,OACE,wBAAQF,QAAS,kBAAME,EAAO,CAACC,SAAUC,OAAOC,SAASC,UAAzD,sBCIWC,EANc,WAG3B,OAF4BR,cAApBS,gBAEiB,cAAC,EAAD,IAAmB,cAAC,EAAD,KCgC/BC,EApCC,WACd,MAAkEV,cAA3DW,EAAP,EAAOA,KAAMF,EAAb,EAAaA,gBAEb,GAFA,EAA8BG,UAG5B,OAAO,8CAET,IAAKD,IAASF,EACZ,OAAO,oDAIT,IAAQI,EAAyBF,EAAzBE,KAAMC,EAAmBH,EAAnBG,QAASC,EAAUJ,EAAVI,MACvB,OACE,gCACE,sBAAKC,UAAU,wCAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBACEC,IAAKH,EACLI,IAAI,UACJF,UAAU,4DAGd,sBAAKA,UAAU,kCAAf,UACE,6BAAKH,IACL,mBAAGG,UAAU,kBAAb,SAAgCD,UAGpC,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,gCAAf,SACGG,KAAKC,UAAUT,EAAM,KAAM,W,gBC/BvBU,EADC,kBAAM,2C,gBCgBPC,MAXf,YAA6C,IAAtBC,EAAqB,EAArBA,UAAcC,EAAO,iBAC1C,OACE,cAAC,IAAD,aACED,UAAWE,YAA2BF,EAAW,CAC/CG,cAAe,kBAAM,cAAC,EAAD,QAEnBF,KCJJG,EAAQ,kBACZ,+CAAiB,cAAC,EAAD,IAAjB,QAoBaC,MAjBf,WACE,OACE,sBAAKZ,UAAU,MAAf,UACE,8BACE,+BACE,6BAAI,cAAC,IAAD,CAAMa,GAAG,WAAT,yBACJ,6BAAI,cAAC,EAAD,WAGR,eAAC,IAAD,WACE,cAAC,EAAD,CAAcC,KAAK,WAAWP,UAAWb,IACzC,cAAC,IAAD,CAAOoB,KAAK,SAASP,UAAWI,WCVzBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCgBCQ,EApBkB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC9CC,EAAUC,cAMhB,OACE,cAAC,IAAD,CACEJ,OAAQA,EACRC,SAAUA,EACVI,YAAazC,OAAOC,SAASC,OAC7BwC,mBATuB,SAACC,GAC1BJ,EAAQK,MAAa,OAARD,QAAQ,IAARA,OAAA,EAAAA,EAAU5C,WAAYC,OAAOC,SAAS4C,WASjDC,cAAc,eALhB,SAOGR,KCTPS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,CACEb,OAAQc,IACRb,SAAUa,IAFZ,SAIE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1B1B,M","file":"static/js/main.853ee9ca.chunk.js","sourcesContent":["import { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n\n  return <button onClick={() => loginWithRedirect()}>Log In</button>;\n};\n\nexport default LoginButton;\n","import {useAuth0} from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n  const {logout} = useAuth0();\n\n  return (\n    <button onClick={() => logout({returnTo: window.location.origin})}>\n      Log Out\n    </button>\n  );\n};\n\nexport default LogoutButton;\n","import { useAuth0 } from \"@auth0/auth0-react\";\nimport LoginButton from \"./LoginButton\";\nimport LogoutButton from \"./LogoutButton\";\n\nconst AuthenticationButton = () => {\n  const { isAuthenticated } = useAuth0();\n\n  return isAuthenticated ? <LogoutButton /> : <LoginButton />;\n};\n\nexport default AuthenticationButton;\n","import {useAuth0} from \"@auth0/auth0-react\";\nimport {Auth0ContextInterface} from \"@auth0/auth0-react/src/auth0-context\";\n\nconst Profile = () => {\n  const {user, isAuthenticated, isLoading}: Auth0ContextInterface = useAuth0();\n\n  if (isLoading) {\n    return <div>Loading ...</div>;\n  }\n  if (!user || !isAuthenticated) {\n    return <div>\n      not authenticated\n    </div>\n  }\n  const { name, picture, email } = user;\n  return (\n    <div>\n      <div className=\"row align-items-center profile-header\">\n        <div className=\"col-md-2 mb-3\">\n          <img\n            src={picture}\n            alt=\"Profile\"\n            className=\"rounded-circle img-fluid profile-picture mb-3 mb-md-0\"\n          />\n        </div>\n        <div className=\"col-md text-center text-md-left\">\n          <h2>{name}</h2>\n          <p className=\"lead text-muted\">{email}</p>\n        </div>\n      </div>\n      <div className=\"row\">\n        <pre className=\"col-12 text-light bg-dark p-4\">\n          {JSON.stringify(user, null, 2)}\n        </pre>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","const Loading = () => <div>Loading</div>\nexport default Loading;\n","import {Route} from \"react-router-dom\";\nimport Loading from \"../Loading\";\nimport {withAuthenticationRequired} from \"@auth0/auth0-react\";\n\n\nfunction PrivateRoute({component, ...rest}) {\n  return (\n    <Route\n      component={withAuthenticationRequired(component, {\n        onRedirecting: () => <Loading/>,\n      })}\n      {...rest}\n    />\n  )\n}\n\nexport default PrivateRoute;\n","import './App.css';\nimport LoginButton from \"./components/LoginButton\";\nimport {Link, Route, Switch} from 'react-router-dom';\nimport AuthenticationButton from \"./components/AuthenticationButton\";\nimport Profile from './components/Profile';\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\n\nconst Login = () => (\n  <div> Login Page <LoginButton/> </div>\n);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav>\n        <ul>\n          <li><Link to='/profile'> Profile </Link></li>\n          <li><AuthenticationButton/></li>\n        </ul>\n      </nav>\n      <Switch>\n        <PrivateRoute path='/profile' component={Profile}/>\n        <Route path='/login' component={Login}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst Auth0ProviderWithHistory = ({ domain, clientId, children }) => {\n  const history = useHistory();\n\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n      cacheLocation=\"localstorage\"\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as authconfig from './config/auth0.json';\nimport {BrowserRouter} from \"react-router-dom\";\nimport Auth0ProviderWithHistory from \"./components/contexts/Auth0ProviderWithHistory\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Auth0ProviderWithHistory\n        domain={authconfig.domain}\n        clientId={authconfig.clientId}\n      >\n        <App/>\n      </Auth0ProviderWithHistory>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}